<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bob.demo.myo2o.dao.ProductDao">
	<resultMap type="com.bob.demo.myo2o.entity.Product"
		id="ProductResultMap">
		<id column="product_id" property="productId" />
		<result column="product_name" property="productName" />
		<result column="product_desc" property="productDesc" />
		<result column="product_img" property="productImg" />
		<result column="normal_price" property="normalPrice" />
		<result column="promotion_price" property="promotionPrice" />
		<result column="priority" property="priority" />
		<result column="p_create_time" property="createTime" />
		<result column="last_eite_time" property="lastEditTime" />
		<result column="enable_status" property="enableStatus" />

		<association property="productCategory"
			javaType="com.bob.demo.myo2o.entity.ProductCategory">
			<id column="product_category_id" property="productCategoryId" />
		</association>
		<association property="shop"
			javaType="com.bob.demo.myo2o.entity.Shop">
			<id column="shop_id" property="shopId" />
		</association>
		<collection property="productImgList"
			ofType="com.bob.demo.myo2o.entity.ProductImg">
			<id column="img_id" property="imgId" />
			<result column="img_addr" property="imgAddr" />
			<result column="img_desc" property="imgDesc" />
			<result column="priority" property="priority" />
			<result column="pi_create_time" property="createTime" />
		</collection>


	</resultMap>
	<!-- 新增product -->
	<insert id="insertProduct"
		parameterType="com.bob.demo.myo2o.entity.Product"
		useGeneratedKeys="true" keyColumn="product_id" keyProperty="productId">
		insert into
		tb_product
		(`product_name`,
		`product_desc`,
		`product_img`,
		`normal_price`,
		`promotion_price`,
		`priority`,
		`create_time`,
		`last_edit_time`,
		`enable_status`,
		`product_category_id`,
		`shop_id`)
		values
		(
		#{productName},
		#{productDesc},
		#{productImg},
		#{normalPrice},
		#{promotionPrice},
		#{priority},
		#{createTime},
		#{lastEditTime},
		#{enableStatus},
		#{productCategory.productCategoryId},
		#{shop.shopId}
		)
	</insert>
	<!-- 通过Id查询 ,详细查询 -->
	<select id="queryById" parameterType="long"
		resultMap="ProductResultMap">
		SELECT
		p.`product_id`,
		p.`product_name`,
		p.`product_desc`,
		p.`product_img`,
		p.`normal_price`,
		p.`promotion_price`,
		p.`priority`,
		p.`create_time` p_create_time,
		p.`last_edit_time`,
		p.`enable_status`,
		p.`product_category_id`,
		p.`shop_id`,

		pi.img_id,
		pi.img_addr,
		pi.img_desc,
		pi.priority,
		pi.create_time pi_create_time
		FROM
		`tb_product`
		p
		left join
		tb_product_img pi
		on
		p.product_id =
		pi.product_id
		where
		p.product_id =
		#{productId}
		order by
		pi.priority desc
	</select>
	<!-- 通过productCondition查询，分页查询 -->
	<select id="queryProduct"
		resultType="com.bob.demo.myo2o.entity.Product">
		SELECT
		`product_id`,
		`product_name`,
		`product_desc`,
		`product_img`,
		`normal_price`,
		`promotion_price`,
		`priority`,
		`create_time`,
		`last_edit_time`,
		`enable_status`,
		`product_category_id`,
		`shop_id`

		FROM
		`tb_product`
		<where>
			<if
				test="productCondition.productCategory!=null
		and productCondition.productCategory.productCategoryId!=null">
				and product_category_id =
				#{productCondition.productCategory.productCategoryId}
			</if>
			<if
				test="productCondition.shop !=null and
		productCondition.shop.shopId !=null">
				and shop_id = #{productCondition.shop.shopId}
			</if>
			<if test="productCondition.productName !=null">
				and product_name like '%${productCondition.productName}%'
			</if>
			<if test="productCondition.enableStatus !=null">
				and enable_status = #{productCondition.enableStatus}
			</if>
		</where>
		order by
		priority desc
		limit #{rowIndex},#{pageSize}
	</select>
	<!-- 同样的条件，查询数量 -->
	<select id="queryProductCount" resultType="int">
		SELECT
		count(1)
		FROM
		`tb_product`
		<where>
			<if
				test="productCondition.productCategory!=null
		and productCondition.productCategory.productCategoryId!=null">
				and product_category_id =
				#{productCondition.productCategory.productCategoryId}
			</if>
			<if
				test="productCondition.shop !=null and
		productCondition.shop.shopId !=null">
				and shop_id = #{productCondition.shop.shopId}
			</if>
			<if test="productCondition.productName !=null">
				and product_name like '%${productCondition.productName}%'
			</if>
			<if test="productCondition.enableStatus !=null">
				and enable_status = #{productCondition.enableStatus}
			</if>
		</where>
	</select>
	<!-- 修改product -->
	<update id="updateProduct"
		parameterType="com.bob.demo.myo2o.entity.Product">
		update
		tb_product
		<set>
			<if test="productName !=null">
				product_name = #{productName},
			</if>
			<if test="productDesc !=null">
				product_desc = #{productDesc},
			</if>
			<if test="productImg !=null">
				product_img = #{productImg},
			</if>
			<if test="normalPrice !=null">
				normal_price = #{normalPrice},
			</if>
			<if test="promotionPrice !=null">
				promotion_price = #{promotionPrice},
			</if>
			<if test="priority !=null">
				priority = #{priority},
			</if>
			<if test="lastEditTime !=null">
				last_edit_time = #{lastEditTime},
			</if>
			<if test="enableStatus !=null">
				enable_status = #{enableStatus},
			</if>
			<if
				test="productCategory !=null and
			productCategory.productCategoryId !=null">
				product_category_id =
				#{productCategory.productCategoryId},
			</if>
		</set>
		where
		product_id = #{productId}
		and
		shop_id = #{shop.shopId}
	</update>
	<!-- 删除product，通过productId和shopId -->
	<delete id="deleteProduct">
		delete from
		tb_product
		where
		product_id = #{productId}
		and
		shop_id = #{shopId}
	</delete>
	<!-- 删除productCategory时，将相应的product对应的标识置为null -->
	<update id="updateProductCategoryIdToNull" parameterType="long">
		update
		tb_product
		set
		product_category_id = null
		where
		product_category_id = #{productCategoryId}
	</update>
</mapper>
